#!/usr/bin/env python3
from jwlib import msg
from jwlib.arguments import ArgumentParser
from jwlib.parse import parse_broadcasting
from jwlib.download import download_all, disk_usage_info
from jwlib.output import create_output

parser = ArgumentParser(prog='jwb-index',
                        usage='%(prog)s [options] [DIR]',
                        description='Index or download media from jw.org')

parser.add_arguments(['--quiet',
                      '--mode',
                      '--lang',
                      '--languages',
                      '--quality',
                      '--hard-subtitles',
                      '--checksum',
                      '--fix-broken',
                      '--no-warning',
                      '--free',
                      '--category',
                      '--exclude',
                      '--latest',
                      '--since',
                      '--limit-rate',
                      '--curl-path',
                      '--no-curl',
                      '--clean-symlinks',
                      '--ntfs',
                      '--download',
                      'work_dir'])

settings = parser.parse_args()

if not settings.mode and not settings.download:
    msg('please use --mode or --download')
    exit(1)

# Convert download options to bools (what a mess)
settings.download_subtitles = settings.download in ('subtitles', 'friendly-subtitles')
settings.friendly_subtitle_filenames = settings.download == 'friendly-subtitles'
settings.download = settings.download == 'media'

# Some heads-up
if settings.quiet < 1:
    if settings.download and settings.curl_path is not None and settings.rate_limit != '0':
        msg('note: download rate limit is active')
    if not settings.safe_filenames and (settings.mode not in (None, 'stdout') or settings.friendly_subtitle_filenames):
        msg('note: NTFS/FAT compatibility is off')

# Warning if disk space is already below limit
if settings.download and settings.keep_free > 0:
    disk_usage_info(settings)

# Do the indexing
data = parse_broadcasting(settings)

# Put files in a sub dir
if settings.mode not in (None, 'stdout'):
    settings.sub_dir = 'jwb-' + settings.lang

if settings.download or settings.download_subtitles:
    download_all(settings, data)

if settings.mode:
    create_output(settings, data, stdout_uniq=True)
